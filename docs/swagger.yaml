basePath: /
definitions:
  auth.AuthResponse:
    properties:
      first_name:
        maxLength: 30
        minLength: 3
        type: string
      id:
        type: integer
      jwt:
        $ref: '#/definitions/types.JwtTokens'
      last_name:
        maxLength: 40
        minLength: 3
        type: string
      phone:
        maxLength: 11
        minLength: 11
        type: string
      role:
        type: string
    required:
    - first_name
    - last_name
    - phone
    type: object
  auth.LoginCredential:
    properties:
      password:
        maxLength: 20
        minLength: 3
        type: string
      phone:
        maxLength: 11
        minLength: 11
        type: string
    required:
    - password
    - phone
    type: object
  auth.RegisterResponse:
    properties:
      refreshToken:
        type: string
      token:
        type: string
      user_id:
        type: integer
    type: object
  auth.RequiredDataForOtp:
    properties:
      phone:
        maxLength: 11
        minLength: 11
        type: string
    required:
    - phone
    type: object
  auth.ValidateOtp:
    properties:
      otp:
        maxLength: 5
        minLength: 5
        type: string
      phone:
        maxLength: 11
        minLength: 11
        type: string
    required:
    - otp
    - phone
    type: object
  category.NewCategory:
    properties:
      name:
        maxLength: 50
        type: string
      parent_id:
        minimum: 0
        type: integer
    required:
    - name
    type: object
  types.JwtTokens:
    properties:
      refreshToken:
        type: string
      token:
        type: string
    type: object
  user.ChangePaasword:
    properties:
      password:
        maxLength: 40
        minLength: 5
        type: string
    required:
    - password
    type: object
  user.EditUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
info:
  contact: {}
  title: Swagger Example API
  version: "1.0"
paths:
  /article/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Delete Article By Id
      tags:
      - articles
    get:
      consumes:
      - application/json
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Get Article By Id
      tags:
      - articles
  /article/add:
    post:
      consumes:
      - multipart/form-data
      description: Upload an article along with an image
      parameters:
      - description: Article Title
        in: formData
        name: title
        required: true
        type: string
      - description: Article Description
        in: formData
        name: description
        required: true
        type: string
      - description: Article Summary
        in: formData
        name: summary
        required: true
        type: string
      - description: Article Category
        in: formData
        name: category
        required: true
        type: string
      - description: Article Image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      tags:
      - articles
  /article/all:
    get:
      description: get all articles
      produces:
      - application/json
      responses: {}
      tags:
      - articles
  /article/byCategory/{categoryId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: categoryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Get Articles By category
      tags:
      - articles
  /article/edit:
    put:
      consumes:
      - multipart/form-data
      description: Edit an article
      parameters:
      - description: Article Title
        in: formData
        name: title
        type: string
      - description: Article Description
        in: formData
        name: description
        type: string
      - description: Article Summary
        in: formData
        name: summary
        type: string
      - description: Article Category
        in: formData
        name: category
        type: string
      - description: Article Status
        in: formData
        name: status
        type: string
      - description: Article id
        in: formData
        name: id
        type: string
      - description: Article Image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses: {}
      tags:
      - articles
  /article/popular:
    get:
      description: get all popular articles
      produces:
      - application/json
      responses: {}
      tags:
      - articles
  /article/property/{propertyId}:
    delete:
      parameters:
      - description: Property ID
        in: path
        name: propertyId
        required: true
        type: integer
      responses: {}
      tags:
      - articles
  /article/property/add:
    post:
      parameters:
      - description: Property description
        in: formData
        name: description
        type: string
      - description: Article id
        in: formData
        name: article_id
        required: true
        type: integer
      - description: Property image
        in: formData
        name: image
        type: file
      responses: {}
      tags:
      - articles
  /article/property/edit:
    put:
      parameters:
      - description: Property description
        in: formData
        name: description
        type: string
      - description: Article id
        in: formData
        name: property_id
        required: true
        type: integer
      - description: Property image
        in: formData
        name: image
        type: file
      responses: {}
      tags:
      - articles
  /auth/login:
    post:
      consumes:
      - application/json
      description: User registration
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.LoginCredential'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.AuthResponse'
      summary: Login
      tags:
      - auth
  /auth/login/send-otp:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.RequiredDataForOtp'
      produces:
      - application/json
      responses: {}
      summary: login with otp
      tags:
      - auth
  /auth/login/validate-otp:
    post:
      consumes:
      - application/json
      description: send otp for loging
      parameters:
      - description: Login request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.ValidateOtp'
      produces:
      - application/json
      responses: {}
      tags:
      - auth
  /auth/register/send-otp:
    post:
      consumes:
      - application/json
      description: User registration
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.RequiredDataForOtp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Register
      tags:
      - auth
  /auth/register/validate-otp:
    post:
      consumes:
      - application/json
      description: User otp validation
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.ValidateOtp'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
      summary: Register
      tags:
      - auth
  /category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Delete Category By Id
      tags:
      - category
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Get Category By Id
      tags:
      - category
  /category/{id}/{name}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: New Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Edit Category By Id
      tags:
      - category
  /category/add:
    post:
      consumes:
      - application/json
      description: Adding new category by admin
      parameters:
      - description: Adding new category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category.NewCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Add Category
      tags:
      - category
  /category/all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Get Categories
      tags:
      - category
  /category/tree:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Get Categorys with tree format
      tags:
      - category
  /user/edit:
    put:
      consumes:
      - application/json
      description: edit user data
      parameters:
      - description: Edit data
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/user.EditUser'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - users
  /user/password/change:
    put:
      consumes:
      - application/json
      description: change password
      parameters:
      - description: Change password
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/user.ChangePaasword'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
